#BlueJ class context
comment0.params=
comment0.target=Tiere()
comment0.text=\n\ Constructor\ f\uFFFDr\ Tiere\ -\ macht\ nichts\n
comment1.params=
comment1.target=void\ act()
comment1.text=\n\ Leere\ Methode\ die\ in\ den\ Unterklassen\ ueberschrieben\ werden\ soll.\n
comment2.params=winkel
comment2.target=void\ drehe(int)
comment2.text=\n\ Dreht\ das\ Tier\ um\ den\ angegebenen\ Winkel\ im\ Uhrzeigersinn\n\ @param\ winkel\n
comment3.params=
comment3.target=void\ vw()
comment3.text=\n\ Bewegt\ das\ Tier\ in\ die\ angegebene\ Richtung\ vorwaerts.\n
comment4.params=
comment4.target=void\ rw()
comment4.text=\n\ Bewegt\ das\ Tier\ in\ die\ angegebene\ Richtung\ rueckwaerts.\n
comment5.params=tierart
comment5.target=boolean\ seheTier(java.lang.Class)
comment5.text=\n\ Testet\ ob\ ein\ anderes\ Tier\ der\ Klasse\ "tierart"\ direkt\ vor\ uns\ steht.\n\ @param\ tierart\ Die\ Tierart\ nach\ der\ gesucht\ wird\n\ @return\ true\ falls\ ein\ Tier\ der\ angegebenen\ Art\ direkt\ vor\ einem\ steht.\n
comment6.params=tierart\ range
comment6.target=boolean\ seheTier(java.lang.Class,\ int)
comment7.params=tierart
comment7.target=void\ essen(java.lang.Class)
comment7.text=\n\ Isst\ ein\ Tier\ der\ angegebenen\ Tierart\ auf,\ wenn\ es\ sich\ direkt\ vor\ einem\ befindet.\n\ @param\ tierart\ Das\ Tier\ das\ gegessen\ werden\ soll\n
comment8.params=tierart\ range
comment8.target=void\ essen(java.lang.Class,\ int)
comment8.text=\n\ Isst\ ein\ Tier\ der\ angegebenen\ Tierart\ auf,\ wenn\ es\ sich\ direkt\ vor\ einem\ befindet.\n\ @param\ tierart\ Das\ Tier\ das\ gegessen\ werden\ soll\n
comment9.params=
comment9.target=boolean\ amRand()
comment9.text=\n\ Testet\ ob\ das\ Tier\ am\ Rand\ der\ Umgebung\ angekommen\ ist.\n\n\ @return\ \ \ \ \ true\ -\ Das\ Tier\ ist\ weniger\ als\ 20\ Pixel\ vom\ Rand\ entfernt.\n
numComments=10
